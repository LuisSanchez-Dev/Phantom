<Application x:Class="Phantom.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Phantom"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Color x:Key="BackgroundGrey">#E9EEF0</Color>
        <SolidColorBrush x:Key="BackgroundGreyBrush" Color="{StaticResource BackgroundGrey}"/>

        <Color x:Key="MediumGrey">#C7D0D4</Color>
        <SolidColorBrush x:Key="DarkGreyBrush" Color="{StaticResource MediumGrey}"/>

        <Color x:Key="SelectBlue">#C5D9E6</Color>

        <Color x:Key="Dark">#373F45</Color>
        <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource Dark}"></SolidColorBrush>


        <Style TargetType="{x:Type Frame}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Frame}">

                        <AdornerDecorator>
                            <ContentPresenter Name="PART_NavWinCP" 
                              ClipToBounds="true"/>
                        </AdornerDecorator>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FileButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontFamily" Value="/Phantom;component/Fonts/#Pe-icon-7-stroke" />
            <Setter Property="Padding" Value="6px" />
            <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
        </Style>

        <ControlTemplate x:Key="FileButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="4" BorderBrush="Transparent" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>

                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource BackgroundGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="{StaticResource MediumGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Transparent" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="Transparent" 
                                            Duration="0:0:0:0.2" BeginTime="0:0:0:0.1" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource SelectBlue}" 
                                            Duration="0:0:0:0" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="Transparent"
                                            Duration="0:0:0:0" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource BackgroundGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="{StaticResource MediumGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger>


            </ControlTemplate.Triggers>
        </ControlTemplate>












        <Style x:Key="CircleButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontFamily" Value="/Phantom;component/Fonts/#Pe-icon-7-stroke" />
            <Setter Property="Padding" Value="6px" />
            <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
        </Style>

        <ControlTemplate x:Key="CircleButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="9999" BorderBrush="Transparent" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>

                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource BackgroundGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="{StaticResource MediumGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Transparent" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="Transparent" 
                                            Duration="0:0:0:0.2" BeginTime="0:0:0:0.1" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource SelectBlue}" 
                                            Duration="0:0:0:0" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="Transparent"
                                            Duration="0:0:0:0" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource BackgroundGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="{StaticResource MediumGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger>


            </ControlTemplate.Triggers>
        </ControlTemplate>











        <Style x:Key="TextButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="24,6,24,8" />
            <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>

        <ControlTemplate x:Key="TextButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="4" BorderBrush="{StaticResource DarkGreyBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>

                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource BackgroundGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="{StaticResource MediumGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Transparent" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource SelectBlue}" 
                                            Duration="0:0:0:0" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="Transparent"
                                            Duration="0:0:0:0" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource BackgroundGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="Background.Color"/>
                            <ColorAnimation To="{StaticResource MediumGrey}" 
                                            Duration="0:0:0:0.2" Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger>


            </ControlTemplate.Triggers>
        </ControlTemplate>








        <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag"
                                Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
            <Setter Property="Foreground"
            Value="#ADABAB" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Width"
            Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                    Background="{StaticResource BackgroundGreyBrush}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                <Setter Value="{StaticResource DarkGreyBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                <Setter Value="{StaticResource DarkGreyBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                Value="Horizontal">
                                <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                Value="Auto" />
                                <Setter Property="Height"
                                Value="8" />
                                <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Application.Resources>
</Application>
